name: Deploy Frontend (Production)

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

on:
  push:
    branches:
      - main
    paths:
      - 'apps/**'
      - 'packages/**'

jobs:
  Deploy-Frontend:
    runs-on: ubuntu-latest
    needs: Deploy-Backend

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4

      - name: Install Vercel CLI
        run: pnpm i -g vercel@latest

      - name: Set Vercel Environment Variables
        env:
          GRAPHQL_URL: ${{ needs.Deploy-Backend.outputs.graphql_url }}
          COGNITO_CLIENT_ID: ${{ needs.Deploy-Backend.outputs.cognito_client_id }}
          COGNITO_CLIENT_SECRET: ${{ needs.Deploy-Backend.outputs.cognito_client_secret }}
          COGNITO_ISSUER: ${{ needs.Deploy-Backend.outputs.cognito_issuer }}
        run: |
          echo $GRAPHQL_URL | vercel env add NEXT_PUBLIC_GRAPHQL_URL preview --force --token $VERCEL_TOKEN
          echo $COGNITO_CLIENT_ID | vercel env add COGNITO_CLIENT_ID preview --force --token $VERCEL_TOKEN
          echo $COGNITO_CLIENT_SECRET | vercel env add COGNITO_CLIENT_SECRET preview --force --token $VERCEL_TOKEN
          echo $COGNITO_ISSUER | vercel env add COGNITO_ISSUER preview --force --token $VERCEL_TOKEN

      - name: Pull Vercel Environment Information
        run: vercel env pull ./apps/web/.env --yes --environment=preview --token=$VERCEL_TOKEN

      - name: Pull Vercel Project Settings
        run: vercel pull --yes --token=$VERCEL_TOKEN

      - name: Build Project Artifacts
        run: vercel build --token=$VERCEL_TOKEN

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=$VERCEL_TOKEN
